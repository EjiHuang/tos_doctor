<adonisControls:AdonisWindow
    x:Class="TOS_TW_TOOL.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TOS_TW_TOOL"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:TOS_TW_TOOL.ViewModels"
    Title="Tos helper"
    Width="450"
    Height="200"
    ResizeMode="CanMinimize"
    Topmost="True"
    mc:Ignorable="d">
    <Window.DataContext>
        <vm:MainViewModel x:Name="MainVM" />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock
                Margin="10,0,5,0"
                VerticalAlignment="Center"
                Text="Game Process :" />
            <ComboBox
                Width="240"
                Margin="5,0,5,0"
                ItemsSource="{Binding ProcessInfoes}"
                SelectedIndex="{Binding GameProcessIndex}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Margin="2" Text="{Binding ProcessName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid x:Name="cb_gd">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="150" />
                                            <ColumnDefinition Width="50" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Column="0"
                                            Margin="5"
                                            Text="{Binding ProcessName}" />
                                        <TextBlock
                                            Grid.Column="1"
                                            Margin="5"
                                            Text="{Binding Pid}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                            <Setter TargetName="cb_gd" Property="Background" Value="Gray" />
                                            <Setter TargetName="cb_gd" Property="TextElement.Foreground" Value="White" />
                                        </Trigger>
                                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                            <Setter TargetName="cb_gd" Property="Background" Value="Blue" />
                                            <Setter TargetName="cb_gd" Property="TextElement.Foreground" Value="White" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
            <!--<Button Margin="0,0,5,0" VerticalAlignment="Center">
                <Path
                    Data="{StaticResource svg_refresh}"
                    Fill="White"
                    Stretch="Uniform" />
            </Button>-->
            <Button
                Width="90"
                Command="{Binding InitCommand}"
                Content="Init"
                IsEnabled="{Binding IsNotFoundPos}" />
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel
                Grid.Row="0"
                Height="30"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <TextBlock
                    Width="30"
                    Margin="10,0"
                    FontSize="22"
                    Text="HP" />
                <Grid>
                    <ProgressBar
                        x:Name="PB_HP"
                        Width="200"
                        Maximum="{Binding StatusInfo.MaxHP}"
                        Minimum="0"
                        Value="{Binding StatusInfo.HP}" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}%">
                                <Binding ElementName="PB_HP" Path="Value" />
                                <Binding ElementName="PB_HP" Path="Maximum" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
                <TextBox
                    Width="110"
                    Margin="10,0"
                    VerticalAlignment="Center"
                    adonisExtensions:WatermarkExtension.Watermark="Hot key"
                    local:FocusExtension.IsFocused="{Binding HotKey.HotKeyTextBoxFocusable4HP}"
                    FontSize="16"
                    IsReadOnly="True"
                    Text="{Binding HotKey.Key4HP}" />
                <Viewbox Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=StackPanel, Mode=FindAncestor, AncestorLevel=1}}">
                    <CheckBox
                        Margin="2"
                        Content="Act"
                        IsChecked="{Binding HotKey.Key4HPEnable}" />
                </Viewbox>
            </StackPanel>
            <StackPanel
                Grid.Row="1"
                Height="30"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Width="30"
                    Margin="10,0"
                    FontSize="22"
                    Text="SP" />
                <Grid>
                    <ProgressBar
                        x:Name="PB_SP"
                        Width="200"
                        Maximum="{Binding StatusInfo.MaxSP}"
                        Minimum="0"
                        Value="{Binding StatusInfo.SP}" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}%">
                                <Binding ElementName="PB_SP" Path="Value" />
                                <Binding ElementName="PB_SP" Path="Maximum" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
                <TextBox
                    Width="110"
                    Margin="10,0"
                    VerticalAlignment="Center"
                    adonisExtensions:WatermarkExtension.Watermark="Hot key"
                    local:FocusExtension.IsFocused="{Binding HotKey.HotKeyTextBoxFocusable4SP}"
                    FontSize="16"
                    IsReadOnly="True"
                    Text="{Binding Path=HotKey.Key4SP}" />
                <Viewbox Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=StackPanel, Mode=FindAncestor, AncestorLevel=1}}">
                    <CheckBox
                        Margin="2"
                        Content="Act"
                        IsChecked="{Binding HotKey.Key4SPEnable}" />
                </Viewbox>
            </StackPanel>
            <StackPanel
                Grid.Row="2"
                Height="30"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Width="50"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Text="Driver :" />
                <TextBlock
                    Width="100"
                    VerticalAlignment="Center"
                    FontSize="14"
                    FontWeight="Bold"
                    Text="{Binding DriverStatus}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Not installed">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Installed">
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Button
                    Margin="10,0"
                    Command="{Binding GetStatusInfoFromOcrCommand}"
                    Content="Get status info (ocr)"
                    IsEnabled="False" />
                <Button
                    Margin="0,0,10,0"
                    Command="{Binding GetStatusInfoFromLineCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Content="Get status info (line)"
                    IsEnabled="{Binding CanDo}" />
            </StackPanel>
        </Grid>

        <!--  Status bar  -->
        <StatusBar Grid.Row="2" Background="#0B6095">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="5,0,0,0"
                        FontWeight="Bold"
                        Text="{Binding StatusFlag, StringFormat={}{0} :}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StatusFlag}" Value="Error">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Foreground="White" Text="{Binding StatusText}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>

</adonisControls:AdonisWindow>
